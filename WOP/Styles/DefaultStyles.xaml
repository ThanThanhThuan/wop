<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wop="clr-namespace:WOP">

  <Style x:Key="myGrid"
         TargetType="Grid">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
  </Style>

  <Style TargetType="ListBox">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource borderColor}" />
    <Setter Property="Margin"
            Value="2" />
    <Setter Property="BorderThickness"
            Value="1" />
  </Style>

  <Style TargetType="Menu">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
  </Style>

  <Style TargetType="MenuItem">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
  </Style>

  <Style TargetType="StatusBar">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
  </Style>

  <!--<Style TargetType="Expander">
        <Setter Property="Background" Value="{DynamicResource backColorDark}" />
        <Setter Property="Foreground" Value="{DynamicResource fontColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource borderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
    </Style>-->

  <Style TargetType="{x:Type TextBlock}">
    <Setter Property="Background"
            Value="Transparent" />
  </Style>

  <Style x:Key="wop_tb"
         TargetType="TextBlock">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
    <Setter Property="Margin"
            Value="2" />
  </Style>

  <Style x:Key="wop_tb_nobg"
         TargetType="TextBlock">
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
    <Setter Property="Margin"
            Value="2" />
  </Style>

  <Style x:Key="bigTextLabel"
         TargetType="TextBlock"
         BasedOn="{StaticResource wop_tb}">
    <Setter Property="FontSize"
            Value="20" />
    <Setter Property="HorizontalAlignment"
            Value="Right" />
  </Style>

  <Style x:Key="bigTextValue"
         TargetType="TextBlock"
         BasedOn="{StaticResource wop_tb}">
    <Setter Property="FontWeight"
            Value="Bold" />
    <Setter Property="FontSize"
            Value="20" />
    <Setter Property="HorizontalAlignment"
            Value="Left" />
  </Style>

  <Style x:Key="smallTextLabel"
         TargetType="TextBlock"
         BasedOn="{StaticResource wop_tb}">
    <Setter Property="FontSize"
            Value="10" />
    <Setter Property="HorizontalAlignment"
            Value="Right" />
  </Style>

  <Style x:Key="smallTextValue"
         TargetType="TextBlock"
         BasedOn="{StaticResource wop_tb}">
    <Setter Property="FontWeight"
            Value="Bold" />
    <Setter Property="FontSize"
            Value="10" />
    <Setter Property="HorizontalAlignment"
            Value="Left" />
  </Style>

  <Style TargetType="TextBox">
    <Setter Property="Background"
            Value="{DynamicResource backColorLight}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColorDark}" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource borderColor}" />
    <Setter Property="Margin"
            Value="2" />
  </Style>

  <!--<Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource backColorDark}" />
        <Setter Property="Foreground" Value="{DynamicResource fontColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource borderColor}" />
        <Setter Property="Margin" Value="2" />
    </Style>-->

  <!--<Style TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource backColorLight}" />
        <Setter Property="Foreground" Value="{DynamicResource fontColorDark}" />
        <Setter Property="Margin" Value="2" />
    </Style>-->

  <Style x:Key="myBorder"
         TargetType="Border">
    <Setter Property="BorderBrush"
            Value="{DynamicResource borderColor}" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="CornerRadius"
            Value="4" />
    <Setter Property="Padding"
            Value="2" />
  </Style>

  <Style TargetType="ProgressBar">
    <Setter Property="Foreground"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Background"
            Value="{DynamicResource backColorLight}" />
    <Setter Property="Margin"
            Value="2" />
  </Style>

  <Style x:Key="taskWorkingStyleButton" TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Margin"
            Value="2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border"
                  CornerRadius="2"
                  BorderThickness="1"
                  Background="#C0C0C0"
                  BorderBrush="#404040">
            <ContentPresenter Margin="2"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True" />
          </Border>
          <!--<ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
              <Setter TargetName="Border"
                      Property="BorderBrush"
                      Value="#202020" />
            </Trigger>
            <Trigger Property="IsDefaulted"
                     Value="true">
              <Setter TargetName="Border"
                      Property="BorderBrush"
                      Value="#202020" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="true">
              <Setter TargetName="Border"
                      Property="Background"
                      Value="#808080" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
              <Setter TargetName="Border"
                      Property="Background"
                      Value="#E0E0E0" />
              <Setter TargetName="Border"
                      Property="BorderBrush"
                      Value="#606060" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter TargetName="Border"
                      Property="Background"
                      Value="#EEEEEE" />
              <Setter TargetName="Border"
                      Property="BorderBrush"
                      Value="#AAAAAA" />
              <Setter Property="Foreground"
                      Value="#888888" />
            </Trigger>
          </ControlTemplate.Triggers>-->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="ListViewJobsItemTemplate">
    <wop:JobListTemplate />
  </DataTemplate>
</ResourceDictionary>