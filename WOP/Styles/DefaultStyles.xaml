<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wop="clr-namespace:WOP">

  <Style x:Key="myGrid"
         TargetType="Grid">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
  </Style>

  <Style TargetType="Menu">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
  </Style>

  <Style TargetType="MenuItem">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
  </Style>

  <Style TargetType="StatusBar">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
  </Style>

  <!--<Style TargetType="Expander">
        <Setter Property="Background" Value="{DynamicResource backColorDark}" />
        <Setter Property="Foreground" Value="{DynamicResource fontColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource borderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
    </Style>-->

  <Style TargetType="{x:Type TextBlock}">
    <Setter Property="Background"
            Value="Transparent" />
  </Style>

  <Style x:Key="wop_tb"
         TargetType="TextBlock">
    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
    <Setter Property="Margin"
            Value="2" />
  </Style>

  <Style x:Key="wop_tb_nobg"
         TargetType="TextBlock">
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColor}" />
    <Setter Property="Margin"
            Value="2" />
  </Style>

  <Style x:Key="bigTextLabel"
         TargetType="TextBlock"
         BasedOn="{StaticResource wop_tb}">
    <Setter Property="FontSize"
            Value="20" />
    <Setter Property="HorizontalAlignment"
            Value="Right" />
  </Style>

  <Style x:Key="bigTextValue"
         TargetType="TextBlock"
         BasedOn="{StaticResource wop_tb}">
    <Setter Property="FontWeight"
            Value="Bold" />
    <Setter Property="FontSize"
            Value="20" />
    <Setter Property="HorizontalAlignment"
            Value="Left" />
  </Style>

  <Style x:Key="smallTextLabel"
         TargetType="TextBlock"
         BasedOn="{StaticResource wop_tb}">
    <Setter Property="FontSize"
            Value="10" />
    <Setter Property="HorizontalAlignment"
            Value="Right" />
  </Style>

  <Style x:Key="smallTextValue"
         TargetType="TextBlock"
         BasedOn="{StaticResource wop_tb}">
    <Setter Property="FontWeight"
            Value="Bold" />
    <Setter Property="FontSize"
            Value="10" />
    <Setter Property="HorizontalAlignment"
            Value="Left" />
  </Style>

  <Style TargetType="TextBox">
    <Setter Property="Background"
            Value="{DynamicResource backColorLight}" />
    <Setter Property="Foreground"
            Value="{DynamicResource fontColorDark}" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource borderColor}" />
    <Setter Property="Margin"
            Value="2" />
  </Style>

  <!--<Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource backColorDark}" />
        <Setter Property="Foreground" Value="{DynamicResource fontColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource borderColor}" />
        <Setter Property="Margin" Value="2" />
    </Style>-->

  <!--<Style TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource backColorLight}" />
        <Setter Property="Foreground" Value="{DynamicResource fontColorDark}" />
        <Setter Property="Margin" Value="2" />
    </Style>-->

  <Style x:Key="myBorder"
         TargetType="Border">
    <Setter Property="BorderBrush"
            Value="{DynamicResource borderColor}" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="CornerRadius"
            Value="4" />
    <Setter Property="Padding"
            Value="2" />
  </Style>

  <Style TargetType="ProgressBar">
    <Setter Property="Foreground"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="Background"
            Value="{DynamicResource backColorLight}" />
    <Setter Property="Margin"
            Value="2" />
  </Style>

  <Style x:Key="taskWorkingStyleButton"
         TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Margin"
            Value="2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border"
                  CornerRadius="2"
                  BorderThickness="1"
                  Background="#C0C0C0"
                  BorderBrush="#404040">
            <ContentPresenter Margin="2"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True" />
          </Border>
          <!--<ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
              <Setter TargetName="Border"
                      Property="BorderBrush"
                      Value="#202020" />
            </Trigger>
            <Trigger Property="IsDefaulted"
                     Value="true">
              <Setter TargetName="Border"
                      Property="BorderBrush"
                      Value="#202020" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="true">
              <Setter TargetName="Border"
                      Property="Background"
                      Value="#808080" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
              <Setter TargetName="Border"
                      Property="Background"
                      Value="#E0E0E0" />
              <Setter TargetName="Border"
                      Property="BorderBrush"
                      Value="#606060" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter TargetName="Border"
                      Property="Background"
                      Value="#EEEEEE" />
              <Setter TargetName="Border"
                      Property="BorderBrush"
                      Value="#AAAAAA" />
              <Setter Property="Foreground"
                      Value="#888888" />
            </Trigger>
          </ControlTemplate.Triggers>-->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <LinearGradientBrush x:Key="NormalBrush"
                       StartPoint="0,0"
                       EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF"
                      Offset="0.0" />
        <GradientStop Color="#CCC"
                      Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="HorizontalNormalBrush"
                       StartPoint="0,0"
                       EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF"
                      Offset="0.0" />
        <GradientStop Color="#CCC"
                      Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="NormalBorderBrush"
                       StartPoint="0,0"
                       EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#CCC"
                      Offset="0.0" />
        <GradientStop Color="#444"
                      Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="HorizontalNormalBorderBrush"
                       StartPoint="0,0"
                       EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#CCC"
                      Offset="0.0" />
        <GradientStop Color="#444"
                      Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <Style x:Key="ScrollBarLineButton"
         TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels"
            Value="True" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Path Name="BorderRepeatButton"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Fill="Gray"
                Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />

          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
              <Setter TargetName="BorderRepeatButton"
                      Property="Fill"
                      Value="#FFE2E2E2" />
            </Trigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- RepeatButton im inneren der ScrollBar (nicht Sichtbar)-->
  <Style x:Key="ScrollBarPageButton"
         TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels"
            Value="True" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="Transparent" />

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarThumb"
         TargetType="{x:Type Thumb}">
    <Setter Property="SnapsToDevicePixels"
            Value="True" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border x:Name="BorderThumb"
                  CornerRadius="2"
                  Background="Gray" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
              <Setter TargetName="BorderThumb"
                      Property="Background"
                      Value="#FFE2E2E2" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>

    </Setter>

  </Style>

  <ControlTemplate x:Key="VerticalScrollBar"
                   TargetType="{x:Type ScrollBar}">
    <Grid  Background="Transparent">
      <Grid.RowDefinitions>
        <RowDefinition MaxHeight="8" />
        <RowDefinition Height="0.00001*" />
        <RowDefinition MaxHeight="8" />
      </Grid.RowDefinitions>

      <RepeatButton  Grid.Row="0"
                     Style="{StaticResource ScrollBarLineButton}"
                     Height="8"
                     Command="ScrollBar.LineUpCommand"
                     Content="M 0 4 L 8 4 L 4 0 Z" />
      <Track Name="PART_Track"
             Grid.Row="1"
             IsDirectionReversed="true">
        <Track.DecreaseRepeatButton>
          <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageUpCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Style="{StaticResource ScrollBarThumb}"
                 Margin="1,0,1,0"
                 Background="{StaticResource HorizontalNormalBrush}"
                 BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageDownCommand" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton Grid.Row="2"
                    Style="{StaticResource ScrollBarLineButton}"
                    Height="8"
                    Command="ScrollBar.LineDownCommand"
                    Content="M 0 0 L 4 4 L 8 0 Z" />
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="HorizontalScrollBar"
                   TargetType="{x:Type ScrollBar}">
    <Grid Background="Transparent">
      <Grid.ColumnDefinitions>
        <ColumnDefinition MaxWidth="8" />
        <ColumnDefinition Width="0.00001*" />
        <ColumnDefinition MaxWidth="8" />
      </Grid.ColumnDefinitions>

      <RepeatButton Grid.Column="0"
                    Style="{StaticResource ScrollBarLineButton}"
                    Width="8"
                    Command="ScrollBar.LineLeftCommand"
                    Content="M0,4 L8,0 8,8 z" />
      <Track Name="PART_Track"
             Grid.Column="1"
             IsDirectionReversed="False">
        <Track.DecreaseRepeatButton>
          <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageLeftCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Style="{StaticResource ScrollBarThumb}"
                 Margin="0,1,0,1"
                 Background="{StaticResource NormalBrush}"
                 BorderBrush="{StaticResource NormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageRightCommand" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton Grid.Column="2"
                    Style="{StaticResource ScrollBarLineButton}"
                    Width="8"
                    Command="ScrollBar.LineRightCommand"
                    Content="M0,8 L0,0 8,4 z" />
    </Grid>
  </ControlTemplate>

  <!--     ScrollBars Positionieren (HorizontalScrollBar und VerticalScrollBar)  -->
  <Style x:Key="{x:Type ScrollBar}"
         TargetType="{x:Type ScrollBar}">
    <Setter Property="SnapsToDevicePixels"
            Value="True" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Style.Triggers>
      <Trigger Property="Orientation"
               Value="Horizontal">
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="8" />
        <Setter Property="Template"
                Value="{StaticResource HorizontalScrollBar}" />
      </Trigger>
      <Trigger Property="Orientation"
               Value="Vertical">
        <Setter Property="Width"
                Value="8" />
        <Setter Property="Height"
                Value="Auto" />
        <Setter Property="Template"
                Value="{StaticResource VerticalScrollBar}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type ListBox}">

    <Setter Property="Background"
            Value="{DynamicResource backColorDark}" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource borderColor}" />
    <Setter Property="Margin"
            Value="2" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="ScrollViewer.CanContentScroll"
            Value="False" />
    <Setter Property="SelectionMode"
            Value="Extended" />
    <Setter Property="BorderThickness"
            Value="0" />
    <Setter Property="IsSynchronizedWithCurrentItem"
            Value="True" />
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style>
          <Setter Property="Control.Padding"
                  Value="0" />
          <Setter Property="Control.Margin"
                  Value="0" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="ListViewJobsItemTemplate">
    <wop:JobListTemplate />
  </DataTemplate>
</ResourceDictionary>